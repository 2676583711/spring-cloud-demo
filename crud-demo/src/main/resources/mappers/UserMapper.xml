<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="cn.zhou.cruddemo.dao.UserDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->

    <!-- resultMap最终还是要将结果映射到pojo上，type就是指定映射到哪一个pojo -->
    <!-- id：设置ResultMap的id -->
    <resultMap type="cn.zhou.cruddemo.pojo.User" id="userMap">
        <!-- 定义主键 ,非常重要。如果是多个字段,则定义多个id -->
        <!-- property：主键在pojo中的属性名 -->
        <!-- column：主键在数据库中的列名 -->
        <id property="id" column="id" jdbcType="INTEGER" javaType="int"/>
        <!-- 定义普通属性 -->
        <result property="username" column="username" jdbcType="VARCHAR" javaType="String"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR" javaType="String"/>
        <result property="password" column="password" jdbcType="VARCHAR" javaType="String"/>
        <result property="sex" column="sex" jdbcType="VARCHAR" javaType="String"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER" javaType="String"/>
        <!--        jdbcType="DATE" javaType="Date"-->
        <result property="createData" column="create_date"/>
    </resultMap>

    <!--    查询所有-->
    <select id="findAll" resultMap="userMap">
        select *from test_user
    </select>
    <!--根据id查询得到一个user对象-->
    <select id="getUser" parameterType="int"
            resultType="cn.zhou.cruddemo.pojo.User" resultMap="userMap">
        select * from test_user where id=#{id}
    </select>
</mapper>

